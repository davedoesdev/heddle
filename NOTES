In aboriginal-1.2.9:

Add these lines to sources/baseconfig-uClibc:

UCLIBC_HAS_THREADS=y
UCLIBC_HAS_TLS=y
UCLIBC_HAS_STDIO_FUTEXES=y
UCLIBC_HAS_SSP=y

Remove this line from sources/targets/x86_64:

LINUXTHREADS_OLD=y

In sources/sections/uClibc++.build, change:

to:

sed -r -i 's/(UCLIBCXX_HAS_(LONG_DOUBLE))=y/# \1 is not set/' .config &&
sed -r -i 's/# (UCLIBCXX_HAS_(WCHAR)) is not set/\1=y/' .config &&

These settings need automating:
??UCLIBCXX_SUPPORT_WCIN=y
??UCLIBCXX_SUPPORT_WCOUT=y
??UCLIBCXX_SUPPORT_WCERR=y
??UCLIBCXX_SUPPORT_WCLOG=n

Apply this patch:

--- download.sh.orig	2014-11-10 22:34:19.208069350 +0000
+++ download.sh	2014-11-10 22:36:00.704064619 +0000
@@ -81,8 +81,8 @@
 
 # These are optional parts of the native root filesystem.
 
-URL=http://cxx.uclibc.org/src/uClibc++-0.2.2.tar.bz2 \
-SHA1=f5582d206378d7daee6f46609c80204c1ad5c0f7 \
+URL=http://cxx.uclibc.org/src/uClibc++-0.2.4.tar.bz2 \
+SHA1=ffadcb8555a155896a364a9b954f19d09972cb83 \
 maybe_fork "download || dienow"
 
 URL=http://distcc.googlecode.com/files/distcc-3.1.tar.bz2 \

Add this as file sources/patches/uClibc-pthread_once.patch:

diff -u a/libpthread/nptl/sysdeps/unix/sysv/linux/x86_64/pthread_once.S b/libpthread/nptl/sysdeps/unix/sysv/linux/x86_64/pthread_once.S
--- a/libpthread/nptl/sysdeps/unix/sysv/linux/x86_64/pthread_once.S
+++ b/libpthread/nptl/sysdeps/unix/sysv/linux/x86_64/pthread_once.S
@@ -23,6 +23,7 @@
 #include <lowlevellock.h>
 
 
+	.hidden	__fork_generation
 	.comm	__fork_generation, 4, 4
 
 	.text

Remove sources/patches/uClibc++-unwind-cxx.patch

Add these lines to sources/baseconfig-linux

CONFIG_IP_MULTICAST=y
CONFIG_IPV6=y
CONFIG_BRIDGE=y
CONFIG_NETFILTER=y
CONFIG_BRIDGE_NETFILTER=y
CONFIG_NETFILTER_ADVANCED=y
CONFIG_NETFILTER_XTABLES=y
CONFIG_NF_CONNTRACK=y
CONFIG_NF_CONNTRACK_IPV4=y
CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=y
CONFIG_NETFILTER_XT_MATCH_CONNTRACK=y
CONFIG_IP_NF_IPTABLES=y
CONFIG_BRIDGE_NF_EBTABLES=y
CONFIG_IP_NF_TARGET_MASQUERADE=y
CONFIG_NF_NAT=y
CONFIG_NF_NAT_IPV4=y
CONFIG_NF_NAT_NEEDED=y
CONFIG_MD=y
CONFIG_BLK_DEV_DM=y
CONFIG_DM_THIN_PROVISIONING=y
CONFIG_UTS_NS=y
CONFIG_IPC_NS=y
CONFIG_PID_NS=y
CONFIG_NET_NS=y
CONFIG_CGROUPS=y
CONFIG_CGROUP_CPUACCT=y
CONFIG_BLK_CGROUP=y
CONFIG_RESOURCE_COUNTERS=y
CONFIG_MEMCG=y
CONFIG_MEMCG_SWAP=y
CONFIG_BTRFS_FS=y

In system-image.sh, function qemu_defaults(), add -enable-kvm before -nographic

Then:

./build.sh x86_64

#In control-images-1.1.0:
#
#./build.sh lfs-bootstrap
#
#Then in aboriginal-1.2.9/build/system-image-x86_64:
#
#./native-build.sh ../../../control-images-1.1.0/build/lfs-bootstrap.hdc 

Then in aboriginal-1.2.9/build/system-image-x86_64:

HDC=/home/david/heddle/build.img QEMU_MEMORY=2048 ./dev-environment.sh

---

# Wget with HTTPS support
wget ftp://ftp.gnu.org/gnu/wget/wget-1.15.tar.gz
tar xf wget-1.15.tar.gz
rm -f wget-1.15.tar.gz
cd wget-1.15
./configure --with-ssl=openssl --with-libssl-prefix=/usr/ssl
make
make install
cd ..
rm -rf wget-1.15

# pip
wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py
python get-pip.py
rm get-pip.py

# SysVinit
# Weave
# nfdhcpd
# kvm
# capstan
# Fold
# Saltstack

#TODO
# Remove source once built

---
Later we can combine to make it all bootable
And we can have a /dev/hdc whose /mnt/init does boot tasks like resizing hdb
and configuring networking
Although it will be partitions on a real machine and each machine will be different so maybe just example scripts

Use salt to update image itself. 

